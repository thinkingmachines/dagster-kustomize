---
# Source: dagster/templates/deployment-daemon.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster-daemon
  labels:
    helm.sh/chart: dagster-0.15.0
    app.kubernetes.io/name: dagster
    app.kubernetes.io/instance: dagster
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
    component: dagster-daemon
    deployment: daemon
  annotations:
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: dagster
      app.kubernetes.io/instance: dagster
      component: dagster-daemon
      deployment: daemon
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dagster
        app.kubernetes.io/instance: dagster
        component: dagster-daemon
        deployment: daemon
      annotations:
        checksum/dagster-workspace: 8be32d0cf06d6a0ad4b814bb11e967284065c14e5d546910ca1e5ea6d2e1b021
        checksum/dagster-instance: 9c506e7be4b578e82617959a968b6e609656ea1ecb791456256a45c75719f2d5
    spec:
      imagePullSecrets:
        []
      serviceAccountName: dagster
      securityContext:
        {}
      initContainers:
        - name: check-db-ready
          image: "library/postgres:9.6.21"
          imagePullPolicy: "IfNotPresent"
          command: ['sh', '-c', 'until pg_isready -h dagster-postgresql -p 5432 -U test; do echo waiting for database; sleep 2; done;']
          securityContext:
            {}
      containers:
        - name: dagster
          securityContext:
            {}
          imagePullPolicy: Always
          image: "docker.io/dagster/dagster-celery-k8s:0.15.0"
          command: [
            "/bin/bash",
            "-c",
            "dagster-daemon run -w /dagster-workspace/workspace.yaml"
          ]
          env:
            - name: DAGSTER_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "dagster-postgresql-secret"
                  key: postgresql-password
            - name: DAGSTER_DAEMON_HEARTBEAT_TOLERANCE
              value: "300"
          envFrom:
            - configMapRef:
                name: dagster-daemon-env
          volumeMounts:
            - name: dagster-instance
              mountPath: "/opt/dagster/dagster_home/dagster.yaml"
              subPath: dagster.yaml
            # Do not use `subPath` to allow the configmap to update if modified
            - name: dagster-workspace-yaml
              mountPath: "/dagster-workspace/"
          resources:
            {}
      nodeSelector:
        {}
      volumes:
        - name: dagster-instance
          configMap:
            name: dagster-instance
        - name: dagster-workspace-yaml
          configMap:
            name: dagster-workspace-yaml
      affinity:
        {}
      tolerations:
        []
